-
  - Spring이 무엇인가요?
  - |
    Java Web Framework

    Enterprise급의 웹앱 개발의 경우 타 시스템과의 연계, 보안, 분산 트랜잭션 관리와 같이 신경써야 할 부분이 굉장히 많음

    이를 기존의 방식대로 servlet, JSP를 이용하여 개발한다면 스파게티가 될 가능성이 매우 높아질 뿐만 아니라 비용 측면에서도 좋지 않음

    이로 인해 Framework의 필요성이 대두되었고, 이 결과로 나온 것이 Spring임

-
  - MVC 패턴이 무엇인가요?
  - |
    Model, View, Controller 세 가지 부분으로 목적을 나눈 디자인 패턴

    # Model

    Model은 실제 데이터베이스와의 연결 및 데이터 처리를 담당하는 부분임

    # View

    View는 데이터를 사용자에게 보여주는

    다시말해, 렌더링을 진행하는 부분이며

    # Controller

    마지막으로 Controller는

    Model과 View 사이에서 어떻게 데이터를 처리하고 정보를 교환할지를 정의하고 관리하는 부분임

-
  - IoC(Inverse of Control)가 무엇인가요?
  - |
    기존에는 객체의 정의부터 실제 사용과 관리까지 모두 프로그래머가 담당하였으나

    Spring에서는 이를 Framework level에서 관리하도록 하였으며

    Spring의 IoC Container를 통해 객체를 언제 어디에 Inject할지 정의하는 방식으로

    객체를 사용하고 관리하도록 하는 것임

    이러한 패턴 덕분에 유지보수에 있어서도 DI와 같은 기법을 통해 비용을 획기적으로 낮출 수 있게 되었다 생각함

-
  - DI는 무엇인가요?
  - |
    Dependency Injection, 객체를 실제로 필요할 때 생성하여 주입하는 방식으로

    interface를 이용해 dependency를 느슨하게 연결한 다음

    설정 파일을 통해 외부에서, 즉 Spring IoC Container에서 객체를 생성하고 inject하는 방식임

-
  - AOP가 무엇인가요?
  - |
    Aspect-Oriented Programming의 준말로써

    기존에 클래스 중심으로 구현된 OOP 패러다임과는 달리, 공통된 로직들을 중심으로 Object를 만들어 정의하는 패러다임임

    예를 들어서 말씀드리자면

    A, B, C 클래스가 있고, 각 클래스 내부에는 메서드 호출 시마다 수행 시간을 기록하는 로직이 함께 구현되어 있다고 하겠음

    기존의 OOP 패러다임에서는 부모 클래스에서 수행 시간 기록 로직을 구현한 뒤, `extend`를 통해 상속하는 방법으로 중복을 제거했으나

    AOP 패러다임에서는 이를 `Aspect`라는 모듈로 분리한 뒤, 이를 필요로 하는 클래스에서 사용하도록 하여 중복된 로직을 분리함

-
  - DAO가 무엇인가요?
  - |
    Data Access Object, 실제 Database에 접근하기 위한 작업들을 전담하는 객체임

    이렇게 관심사를 분리함으로써 유지보수 비용이 낮춰지고 코드의 가독성이 높아지게 되는 효과가 있음

-
  - Annotation은 왜 사용하나요?
  - |
    # Annotation

    먼저 Annotation은 at(`@`) 기호 뒤에 사용할 annotation의 이름을 붙이는 형태로 사용함

    이를 이용해 해당 구현부에 특정한 기능을 부여할 수 있으며, 이는 class, method, field 어느 곳에든지 사용이 가능함

    # 이유

    이를 도입하게 된 이유는... 기존에는 beans를 xml 파일을 통해 관리했으나

    application의 size가 커짐에 따라 관리해야 할 요소가 복잡해졌고, 코드의 가독성 또한 매우 낮아졌음

    이로 인해 annotation이라는 개념을 도입하였으며

    이후 설정 파일이 아니라 실제 구현부에 기능을 부여하는 형태로 정의가 가능하게 되었음

    덕분에 가독성이 높아졌을 뿐 아니라, compiling 시 code check 또한 가능해졌음
